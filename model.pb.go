// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: model.proto

package schema

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Person_Gender int32

const (
	Person_GENDER_UNKNOWN Person_Gender = 0
	Person_GENDER_MALE    Person_Gender = 1
	Person_GENDER_FEMALE  Person_Gender = 2
)

// Enum value maps for Person_Gender.
var (
	Person_Gender_name = map[int32]string{
		0: "GENDER_UNKNOWN",
		1: "GENDER_MALE",
		2: "GENDER_FEMALE",
	}
	Person_Gender_value = map[string]int32{
		"GENDER_UNKNOWN": 0,
		"GENDER_MALE":    1,
		"GENDER_FEMALE":  2,
	}
)

func (x Person_Gender) Enum() *Person_Gender {
	p := new(Person_Gender)
	*p = x
	return p
}

func (x Person_Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Person_Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[0].Descriptor()
}

func (Person_Gender) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[0]
}

func (x Person_Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Person_Gender.Descriptor instead.
func (Person_Gender) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{4, 0}
}

type Person_Position int32

const (
	Person_POSITION_UNKNOWN  Person_Position = 0
	Person_POSITION_ACTOR    Person_Position = 1
	Person_POSITION_DIRECTOR Person_Position = 2
	Person_POSITION_OPERATOR Person_Position = 3
	Person_POSITION_COMPOSER Person_Position = 4
	Person_POSITION_WRITER   Person_Position = 5
)

// Enum value maps for Person_Position.
var (
	Person_Position_name = map[int32]string{
		0: "POSITION_UNKNOWN",
		1: "POSITION_ACTOR",
		2: "POSITION_DIRECTOR",
		3: "POSITION_OPERATOR",
		4: "POSITION_COMPOSER",
		5: "POSITION_WRITER",
	}
	Person_Position_value = map[string]int32{
		"POSITION_UNKNOWN":  0,
		"POSITION_ACTOR":    1,
		"POSITION_DIRECTOR": 2,
		"POSITION_OPERATOR": 3,
		"POSITION_COMPOSER": 4,
		"POSITION_WRITER":   5,
	}
)

func (x Person_Position) Enum() *Person_Position {
	p := new(Person_Position)
	*p = x
	return p
}

func (x Person_Position) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Person_Position) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[1].Descriptor()
}

func (Person_Position) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[1]
}

func (x Person_Position) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Person_Position.Descriptor instead.
func (Person_Position) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{4, 1}
}

type Series_Status int32

const (
	Series_SERIES_STATUS_UNKNOWN     Series_Status = 0
	Series_SERIES_STATUS_NOT_STARTED Series_Status = 1
	Series_SERIES_STATUS_BORADCAST   Series_Status = 2
	Series_SERIES_STATUS_OFF_SEASON  Series_Status = 3
	Series_SERIES_STATUS_FINISHED    Series_Status = 4
	Series_SERIES_STATUS_TBA         Series_Status = 5
)

// Enum value maps for Series_Status.
var (
	Series_Status_name = map[int32]string{
		0: "SERIES_STATUS_UNKNOWN",
		1: "SERIES_STATUS_NOT_STARTED",
		2: "SERIES_STATUS_BORADCAST",
		3: "SERIES_STATUS_OFF_SEASON",
		4: "SERIES_STATUS_FINISHED",
		5: "SERIES_STATUS_TBA",
	}
	Series_Status_value = map[string]int32{
		"SERIES_STATUS_UNKNOWN":     0,
		"SERIES_STATUS_NOT_STARTED": 1,
		"SERIES_STATUS_BORADCAST":   2,
		"SERIES_STATUS_OFF_SEASON":  3,
		"SERIES_STATUS_FINISHED":    4,
		"SERIES_STATUS_TBA":         5,
	}
)

func (x Series_Status) Enum() *Series_Status {
	p := new(Series_Status)
	*p = x
	return p
}

func (x Series_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Series_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[2].Descriptor()
}

func (Series_Status) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[2]
}

func (x Series_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Series_Status.Descriptor instead.
func (Series_Status) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{5, 0}
}

type Season_Status int32

const (
	Season_SEASON_STATUS_UNKNOWN     Season_Status = 0
	Season_SEASON_STATUS_NOT_STARTED Season_Status = 1
	Season_SEASON_STATUS_BORADCAST   Season_Status = 2
	Season_SEASON_STATUS_FINISHED    Season_Status = 3
)

// Enum value maps for Season_Status.
var (
	Season_Status_name = map[int32]string{
		0: "SEASON_STATUS_UNKNOWN",
		1: "SEASON_STATUS_NOT_STARTED",
		2: "SEASON_STATUS_BORADCAST",
		3: "SEASON_STATUS_FINISHED",
	}
	Season_Status_value = map[string]int32{
		"SEASON_STATUS_UNKNOWN":     0,
		"SEASON_STATUS_NOT_STARTED": 1,
		"SEASON_STATUS_BORADCAST":   2,
		"SEASON_STATUS_FINISHED":    3,
	}
)

func (x Season_Status) Enum() *Season_Status {
	p := new(Season_Status)
	*p = x
	return p
}

func (x Season_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Season_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[3].Descriptor()
}

func (Season_Status) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[3]
}

func (x Season_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Season_Status.Descriptor instead.
func (Season_Status) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{6, 0}
}

type VoiceOver_Type int32

const (
	VoiceOver_VOICEOVER_TYPE_UNKNOWN     VoiceOver_Type = 0
	VoiceOver_VOICEOVER_TYPE_VO          VoiceOver_Type = 1
	VoiceOver_VOICEOVER_TYPE_AMATEUR_MVO VoiceOver_Type = 2
	VoiceOver_VOICEOVER_TYPE_PRO_MVO     VoiceOver_Type = 3
	VoiceOver_VOICEOVER_TYPE_DUB         VoiceOver_Type = 4
)

// Enum value maps for VoiceOver_Type.
var (
	VoiceOver_Type_name = map[int32]string{
		0: "VOICEOVER_TYPE_UNKNOWN",
		1: "VOICEOVER_TYPE_VO",
		2: "VOICEOVER_TYPE_AMATEUR_MVO",
		3: "VOICEOVER_TYPE_PRO_MVO",
		4: "VOICEOVER_TYPE_DUB",
	}
	VoiceOver_Type_value = map[string]int32{
		"VOICEOVER_TYPE_UNKNOWN":     0,
		"VOICEOVER_TYPE_VO":          1,
		"VOICEOVER_TYPE_AMATEUR_MVO": 2,
		"VOICEOVER_TYPE_PRO_MVO":     3,
		"VOICEOVER_TYPE_DUB":         4,
	}
)

func (x VoiceOver_Type) Enum() *VoiceOver_Type {
	p := new(VoiceOver_Type)
	*p = x
	return p
}

func (x VoiceOver_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoiceOver_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[4].Descriptor()
}

func (VoiceOver_Type) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[4]
}

func (x VoiceOver_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoiceOver_Type.Descriptor instead.
func (VoiceOver_Type) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{8, 0}
}

type Country struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	RusTitle string `protobuf:"bytes,3,opt,name=rus_title,json=rusTitle,proto3" json:"rus_title,omitempty"`
	Code     string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Flag     string `protobuf:"bytes,5,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *Country) Reset() {
	*x = Country{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0}
}

func (x *Country) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Country) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Country) GetRusTitle() string {
	if x != nil {
		return x.RusTitle
	}
	return ""
}

func (x *Country) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Country) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

type Genre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Alias    string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	RusTitle string `protobuf:"bytes,4,opt,name=rus_title,json=rusTitle,proto3" json:"rus_title,omitempty"`
}

func (x *Genre) Reset() {
	*x = Genre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genre) ProtoMessage() {}

func (x *Genre) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genre.ProtoReflect.Descriptor instead.
func (*Genre) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{1}
}

func (x *Genre) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Genre) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Genre) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Genre) GetRusTitle() string {
	if x != nil {
		return x.RusTitle
	}
	return ""
}

type Keyword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Alias    string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	RusTitle string `protobuf:"bytes,4,opt,name=rus_title,json=rusTitle,proto3" json:"rus_title,omitempty"`
}

func (x *Keyword) Reset() {
	*x = Keyword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keyword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keyword) ProtoMessage() {}

func (x *Keyword) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keyword.ProtoReflect.Descriptor instead.
func (*Keyword) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{2}
}

func (x *Keyword) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Keyword) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Keyword) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Keyword) GetRusTitle() string {
	if x != nil {
		return x.RusTitle
	}
	return ""
}

type Broadcaster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CountryId   int32  `protobuf:"varint,2,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	Alias       string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	Title       string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	RusTitle    string `protobuf:"bytes,5,opt,name=rus_title,json=rusTitle,proto3" json:"rus_title,omitempty"`
	Url         string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Image       string `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *Broadcaster) Reset() {
	*x = Broadcaster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Broadcaster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broadcaster) ProtoMessage() {}

func (x *Broadcaster) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broadcaster.ProtoReflect.Descriptor instead.
func (*Broadcaster) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3}
}

func (x *Broadcaster) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Broadcaster) GetCountryId() int32 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *Broadcaster) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Broadcaster) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Broadcaster) GetRusTitle() string {
	if x != nil {
		return x.RusTitle
	}
	return ""
}

func (x *Broadcaster) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Broadcaster) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Broadcaster) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CountryId  int32                  `protobuf:"varint,2,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	FirstName  string                 `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName   string                 `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	BirthPlace string                 `protobuf:"bytes,5,opt,name=birth_place,json=birthPlace,proto3" json:"birth_place,omitempty"`
	BirthDate  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	DeathDate  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=death_date,json=deathDate,proto3" json:"death_date,omitempty"`
	Gender     Person_Gender          `protobuf:"varint,8,opt,name=gender,proto3,enum=storage.Person_Gender" json:"gender,omitempty"`
	Position   Person_Position        `protobuf:"varint,9,opt,name=position,proto3,enum=storage.Person_Position" json:"position,omitempty"`
	MainPhoto  string                 `protobuf:"bytes,10,opt,name=main_photo,json=mainPhoto,proto3" json:"main_photo,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{4}
}

func (x *Person) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Person) GetCountryId() int32 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *Person) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Person) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Person) GetBirthPlace() string {
	if x != nil {
		return x.BirthPlace
	}
	return ""
}

func (x *Person) GetBirthDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BirthDate
	}
	return nil
}

func (x *Person) GetDeathDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DeathDate
	}
	return nil
}

func (x *Person) GetGender() Person_Gender {
	if x != nil {
		return x.Gender
	}
	return Person_GENDER_UNKNOWN
}

func (x *Person) GetPosition() Person_Position {
	if x != nil {
		return x.Position
	}
	return Person_POSITION_UNKNOWN
}

func (x *Person) GetMainPhoto() string {
	if x != nil {
		return x.MainPhoto
	}
	return ""
}

type Series struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CountryId       int32                  `protobuf:"varint,2,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	Title           string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	RusTitle        string                 `protobuf:"bytes,4,opt,name=rus_title,json=rusTitle,proto3" json:"rus_title,omitempty"`
	Description     string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Status          Series_Status          `protobuf:"varint,6,opt,name=status,proto3,enum=storage.Series_Status" json:"status,omitempty"`
	StartDate       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	FinishDate      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=finish_date,json=finishDate,proto3" json:"finish_date,omitempty"`
	Poster          string                 `protobuf:"bytes,9,opt,name=poster,proto3" json:"poster,omitempty"`
	Url             string                 `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	WikiUrl         string                 `protobuf:"bytes,11,opt,name=wiki_url,json=wikiUrl,proto3" json:"wiki_url,omitempty"`
	ImdbRating      string                 `protobuf:"bytes,12,opt,name=imdb_rating,json=imdbRating,proto3" json:"imdb_rating,omitempty"`
	KinopoiskRating string                 `protobuf:"bytes,13,opt,name=kinopoisk_rating,json=kinopoiskRating,proto3" json:"kinopoisk_rating,omitempty"`
}

func (x *Series) Reset() {
	*x = Series{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Series) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Series) ProtoMessage() {}

func (x *Series) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Series.ProtoReflect.Descriptor instead.
func (*Series) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{5}
}

func (x *Series) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Series) GetCountryId() int32 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *Series) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Series) GetRusTitle() string {
	if x != nil {
		return x.RusTitle
	}
	return ""
}

func (x *Series) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Series) GetStatus() Series_Status {
	if x != nil {
		return x.Status
	}
	return Series_SERIES_STATUS_UNKNOWN
}

func (x *Series) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Series) GetFinishDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishDate
	}
	return nil
}

func (x *Series) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

func (x *Series) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Series) GetWikiUrl() string {
	if x != nil {
		return x.WikiUrl
	}
	return ""
}

func (x *Series) GetImdbRating() string {
	if x != nil {
		return x.ImdbRating
	}
	return ""
}

func (x *Series) GetKinopoiskRating() string {
	if x != nil {
		return x.KinopoiskRating
	}
	return ""
}

type Season struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SeriesId     int32                  `protobuf:"varint,2,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	Number       int32                  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Title        string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	RusTitle     string                 `protobuf:"bytes,5,opt,name=rus_title,json=rusTitle,proto3" json:"rus_title,omitempty"`
	Description  string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Status       Season_Status          `protobuf:"varint,7,opt,name=status,proto3,enum=storage.Season_Status" json:"status,omitempty"`
	StartDate    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	FinishDate   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=finish_date,json=finishDate,proto3" json:"finish_date,omitempty"`
	Poster       string                 `protobuf:"bytes,10,opt,name=poster,proto3" json:"poster,omitempty"`
	EpisodeCount int32                  `protobuf:"varint,11,opt,name=episode_count,json=episodeCount,proto3" json:"episode_count,omitempty"`
}

func (x *Season) Reset() {
	*x = Season{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Season) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Season) ProtoMessage() {}

func (x *Season) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Season.ProtoReflect.Descriptor instead.
func (*Season) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{6}
}

func (x *Season) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Season) GetSeriesId() int32 {
	if x != nil {
		return x.SeriesId
	}
	return 0
}

func (x *Season) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Season) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Season) GetRusTitle() string {
	if x != nil {
		return x.RusTitle
	}
	return ""
}

func (x *Season) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Season) GetStatus() Season_Status {
	if x != nil {
		return x.Status
	}
	return Season_SEASON_STATUS_UNKNOWN
}

func (x *Season) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Season) GetFinishDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishDate
	}
	return nil
}

func (x *Season) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

func (x *Season) GetEpisodeCount() int32 {
	if x != nil {
		return x.EpisodeCount
	}
	return 0
}

type Episode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SeriesId        int32                  `protobuf:"varint,2,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	SeasonId        int32                  `protobuf:"varint,3,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	Title           string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	RusTitle        string                 `protobuf:"bytes,5,opt,name=rus_title,json=rusTitle,proto3" json:"rus_title,omitempty"`
	Number          string                 `protobuf:"bytes,6,opt,name=number,proto3" json:"number,omitempty"`
	Description     string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Duration        int32                  `protobuf:"varint,8,opt,name=duration,proto3" json:"duration,omitempty"`
	AirDate         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=air_date,json=airDate,proto3" json:"air_date,omitempty"`
	ImdbRating      string                 `protobuf:"bytes,10,opt,name=imdb_rating,json=imdbRating,proto3" json:"imdb_rating,omitempty"`
	KinopoiskRating string                 `protobuf:"bytes,11,opt,name=kinopoisk_rating,json=kinopoiskRating,proto3" json:"kinopoisk_rating,omitempty"`
}

func (x *Episode) Reset() {
	*x = Episode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Episode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Episode) ProtoMessage() {}

func (x *Episode) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Episode.ProtoReflect.Descriptor instead.
func (*Episode) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{7}
}

func (x *Episode) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Episode) GetSeriesId() int32 {
	if x != nil {
		return x.SeriesId
	}
	return 0
}

func (x *Episode) GetSeasonId() int32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *Episode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Episode) GetRusTitle() string {
	if x != nil {
		return x.RusTitle
	}
	return ""
}

func (x *Episode) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Episode) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Episode) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Episode) GetAirDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AirDate
	}
	return nil
}

func (x *Episode) GetImdbRating() string {
	if x != nil {
		return x.ImdbRating
	}
	return ""
}

func (x *Episode) GetKinopoiskRating() string {
	if x != nil {
		return x.KinopoiskRating
	}
	return ""
}

type VoiceOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string         `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	RusTitle string         `protobuf:"bytes,3,opt,name=rus_title,json=rusTitle,proto3" json:"rus_title,omitempty"`
	Url      string         `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Type     VoiceOver_Type `protobuf:"varint,5,opt,name=type,proto3,enum=storage.VoiceOver_Type" json:"type,omitempty"`
}

func (x *VoiceOver) Reset() {
	*x = VoiceOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceOver) ProtoMessage() {}

func (x *VoiceOver) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceOver.ProtoReflect.Descriptor instead.
func (*VoiceOver) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{8}
}

func (x *VoiceOver) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VoiceOver) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VoiceOver) GetRusTitle() string {
	if x != nil {
		return x.RusTitle
	}
	return ""
}

func (x *VoiceOver) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *VoiceOver) GetType() VoiceOver_Type {
	if x != nil {
		return x.Type
	}
	return VoiceOver_VOICEOVER_TYPE_UNKNOWN
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username    string            `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password    string            `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Email       string            `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	FirstName   string            `protobuf:"bytes,5,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string            `protobuf:"bytes,6,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Photo       string            `protobuf:"bytes,7,opt,name=photo,proto3" json:"photo,omitempty"`
	Avatar      string            `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Bio         string            `protobuf:"bytes,9,opt,name=bio,proto3" json:"bio,omitempty"`
	Url         string            `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	SocialLinks map[string]string `protobuf:"bytes,11,rep,name=social_links,json=socialLinks,proto3" json:"social_links,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{9}
}

func (x *User) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *User) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *User) GetSocialLinks() map[string]string {
	if x != nil {
		return x.SocialLinks
	}
	return nil
}

var File_model_proto protoreflect.FileDescriptor

var file_model_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x73, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x73,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x22, 0x60, 0x0a,
	0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x73, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x62, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x73, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x73, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x0b, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x75, 0x73, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x75, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xe2, 0x04, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x61, 0x74, 0x68,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x61, 0x74, 0x68, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61,
	0x69, 0x6e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f,
	0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52,
	0x5f, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x22, 0x8e, 0x01, 0x0a, 0x08, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x52,
	0x45, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4f, 0x53, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x15,
	0x0a, 0x11, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f,
	0x53, 0x45, 0x52, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x52, 0x10, 0x05, 0x22, 0xf8, 0x04, 0x0a, 0x06, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75,
	0x73, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x75, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x77,
	0x69, 0x6b, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x69, 0x6b, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x64, 0x62, 0x5f, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x64,
	0x62, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x6b, 0x69, 0x6e, 0x6f, 0x70,
	0x6f, 0x69, 0x73, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6b, 0x69, 0x6e, 0x6f, 0x70, 0x6f, 0x69, 0x73, 0x6b, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x22, 0xb0, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a,
	0x15, 0x53, 0x45, 0x52, 0x49, 0x45, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x45, 0x52, 0x49,
	0x45, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x45, 0x52, 0x49, 0x45,
	0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x4f, 0x52, 0x41, 0x44, 0x43, 0x41,
	0x53, 0x54, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x45, 0x52, 0x49, 0x45, 0x53, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x46, 0x46, 0x5f, 0x53, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x45, 0x52, 0x49, 0x45, 0x53, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x04, 0x12, 0x15,
	0x0a, 0x11, 0x53, 0x45, 0x52, 0x49, 0x45, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x54, 0x42, 0x41, 0x10, 0x05, 0x22, 0x84, 0x04, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x75, 0x73, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x75, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x7b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x4f, 0x52, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x02,
	0x12, 0x1a, 0x0a, 0x16, 0x53, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x03, 0x22, 0xdf, 0x02, 0x0a,
	0x07, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x73, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x73,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x61,
	0x69, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x61, 0x69, 0x72, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x64, 0x62, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x64, 0x62, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x6b, 0x69, 0x6e, 0x6f, 0x70, 0x6f, 0x69, 0x73, 0x6b,
	0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6b,
	0x69, 0x6e, 0x6f, 0x70, 0x6f, 0x69, 0x73, 0x6b, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x9d,
	0x02, 0x0a, 0x09, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x73, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4f,
	0x76, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8d,
	0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x4f, 0x49, 0x43, 0x45,
	0x4f, 0x56, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x4f, 0x56, 0x45, 0x52,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x4f, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x56, 0x4f,
	0x49, 0x43, 0x45, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4d, 0x41,
	0x54, 0x45, 0x55, 0x52, 0x5f, 0x4d, 0x56, 0x4f, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x4f,
	0x49, 0x43, 0x45, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f,
	0x5f, 0x4d, 0x56, 0x4f, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x4f,
	0x56, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x55, 0x42, 0x10, 0x04, 0x22, 0xf5,
	0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x41, 0x0a, 0x0c, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x66, 0x2d, 0x73, 0x68, 0x6f, 0x77, 0x73, 0x2f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_proto_rawDescOnce sync.Once
	file_model_proto_rawDescData = file_model_proto_rawDesc
)

func file_model_proto_rawDescGZIP() []byte {
	file_model_proto_rawDescOnce.Do(func() {
		file_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_proto_rawDescData)
	})
	return file_model_proto_rawDescData
}

var file_model_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_model_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_model_proto_goTypes = []interface{}{
	(Person_Gender)(0),            // 0: storage.Person.Gender
	(Person_Position)(0),          // 1: storage.Person.Position
	(Series_Status)(0),            // 2: storage.Series.Status
	(Season_Status)(0),            // 3: storage.Season.Status
	(VoiceOver_Type)(0),           // 4: storage.VoiceOver.Type
	(*Country)(nil),               // 5: storage.Country
	(*Genre)(nil),                 // 6: storage.Genre
	(*Keyword)(nil),               // 7: storage.Keyword
	(*Broadcaster)(nil),           // 8: storage.Broadcaster
	(*Person)(nil),                // 9: storage.Person
	(*Series)(nil),                // 10: storage.Series
	(*Season)(nil),                // 11: storage.Season
	(*Episode)(nil),               // 12: storage.Episode
	(*VoiceOver)(nil),             // 13: storage.VoiceOver
	(*User)(nil),                  // 14: storage.User
	nil,                           // 15: storage.User.SocialLinksEntry
	(*timestamppb.Timestamp)(nil), // 16: google.protobuf.Timestamp
}
var file_model_proto_depIdxs = []int32{
	16, // 0: storage.Person.birth_date:type_name -> google.protobuf.Timestamp
	16, // 1: storage.Person.death_date:type_name -> google.protobuf.Timestamp
	0,  // 2: storage.Person.gender:type_name -> storage.Person.Gender
	1,  // 3: storage.Person.position:type_name -> storage.Person.Position
	2,  // 4: storage.Series.status:type_name -> storage.Series.Status
	16, // 5: storage.Series.start_date:type_name -> google.protobuf.Timestamp
	16, // 6: storage.Series.finish_date:type_name -> google.protobuf.Timestamp
	3,  // 7: storage.Season.status:type_name -> storage.Season.Status
	16, // 8: storage.Season.start_date:type_name -> google.protobuf.Timestamp
	16, // 9: storage.Season.finish_date:type_name -> google.protobuf.Timestamp
	16, // 10: storage.Episode.air_date:type_name -> google.protobuf.Timestamp
	4,  // 11: storage.VoiceOver.type:type_name -> storage.VoiceOver.Type
	15, // 12: storage.User.social_links:type_name -> storage.User.SocialLinksEntry
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_model_proto_init() }
func file_model_proto_init() {
	if File_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Country); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Genre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keyword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Broadcaster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Series); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Season); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Episode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_proto_goTypes,
		DependencyIndexes: file_model_proto_depIdxs,
		EnumInfos:         file_model_proto_enumTypes,
		MessageInfos:      file_model_proto_msgTypes,
	}.Build()
	File_model_proto = out.File
	file_model_proto_rawDesc = nil
	file_model_proto_goTypes = nil
	file_model_proto_depIdxs = nil
}
